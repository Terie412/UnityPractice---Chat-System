//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameMgr), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetPrefab", GetPrefab);
		L.RegFunction("LoadScene", LoadScene);
		L.RegFunction("NewVector2", NewVector2);
		L.RegFunction("NewVector3", NewVector3);
		L.RegFunction("NewColor", NewColor);
		L.RegFunction("NewPlayer", NewPlayer);
		L.RegFunction("NewMessage", NewMessage);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("prefabs", get_prefabs, set_prefabs);
		L.RegVar("gameMgr", get_gameMgr, null);
		L.RegVar("uiMgr", get_uiMgr, null);
		L.RegVar("globalData", get_globalData, null);
		L.RegVar("luaMgr", get_luaMgr, null);
		L.RegVar("eventMgr", get_eventMgr, null);
		L.RegVar("resourceMgr", get_resourceMgr, null);
		L.RegVar("netWorkMgr", get_netWorkMgr, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPrefab(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameMgr obj = (GameMgr)ToLua.CheckObject<GameMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject o = obj.GetPrefab(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadScene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameMgr obj = (GameMgr)ToLua.CheckObject<GameMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.LoadScene(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NewVector2(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameMgr obj = (GameMgr)ToLua.CheckObject<GameMgr>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.Vector2 o = obj.NewVector2(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NewVector3(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GameMgr obj = (GameMgr)ToLua.CheckObject<GameMgr>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Vector3 o = obj.NewVector3(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NewColor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			GameMgr obj = (GameMgr)ToLua.CheckObject<GameMgr>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			UnityEngine.Color o = obj.NewColor(arg0, arg1, arg2, arg3);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NewPlayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			GameMgr obj = (GameMgr)ToLua.CheckObject<GameMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			NetWorkMgr.PlayerState arg2 = (NetWorkMgr.PlayerState)ToLua.CheckObject(L, 4, typeof(NetWorkMgr.PlayerState));
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			NetWorkMgr.Player o = obj.NewPlayer(arg0, arg1, arg2, arg3);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NewMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameMgr obj = (GameMgr)ToLua.CheckObject<GameMgr>(L, 1);
			NetWorkMgr.Player arg0 = (NetWorkMgr.Player)ToLua.CheckObject<NetWorkMgr.Player>(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			NetWorkMgr.Message o = obj.NewMessage(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_prefabs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameMgr obj = (GameMgr)o;
			System.Collections.Generic.List<UnityEngine.GameObject> ret = obj.prefabs;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prefabs on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameMgr(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GameMgr.gameMgr);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uiMgr(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GameMgr.uiMgr);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_globalData(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GameMgr.globalData);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_luaMgr(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GameMgr.luaMgr);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_eventMgr(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GameMgr.eventMgr);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_resourceMgr(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GameMgr.resourceMgr);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_netWorkMgr(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GameMgr.netWorkMgr);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_prefabs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameMgr obj = (GameMgr)o;
			System.Collections.Generic.List<UnityEngine.GameObject> arg0 = (System.Collections.Generic.List<UnityEngine.GameObject>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.GameObject>));
			obj.prefabs = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prefabs on a nil value");
		}
	}
}

